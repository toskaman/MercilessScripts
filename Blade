-- Checking if the PlaceId condition is satisfied
if game.PlaceId == 15744137588 then

    -- Loading the OrionLib library
    local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
    if not OrionLib then
        error("Failed to load the OrionLib library")
        return
    end

    -- Creating the main window
    local Window = OrionLib:MakeWindow({
        Name = "MercilessHub",
        HidePremium = false,
        SaveConfig = true,
        ConfigFolder = "WendelCfg",
        IntroEnabled = false
    })

getgenv().Settings = {
        AutoAtk = false, -- Starting disabled
        AutoDungeon = false, -- Starting disabled
        AutoBuyGems = {
            [10008] = false,
            [10009] = false,
            [10010] = false,
            [10011] = false,
            [10012] = false,
            [10013] = false,
            [10014] = false,
            [10015] = false,
            [10016] = false,
         },
	mespetsequiper = {},
	Range = 200,
	AutoFarm = true,
	WalkToEnemy = false,
	DamageBoost = true,
	DamageNumber = 1,
    }


  
    -- Auto-attack function
    local function AutoAtk()
        while G.AutoAtk do
            -- Call the auto-attack event
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 75
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("PlayerClickAttack"):FireServer()
            wait(0.01)
        end
    end

    -- Creating the Player tab
    local PlayerTab = Window:MakeTab({
        Name = "Player",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    -- Creating the Scripts tab
    local ScriptsTab = Window:MakeTab({
        Name = "Scripts",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })


local AutoBuyTab = Window:MakeTab({
        Name = "Shop",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

ScriptsTab:AddToggle({
    Name = "Tora Scripts",
    Callback = function(state)
        if state then
            getgenv().Settings.AutoFarm = true
            spawn(function()
                while wait(1) do
                    for _, v in pairs(game.Workspace.Golds:GetChildren()) do
                        v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                    end
                end
            end)

            local WeaponsInventory = require(game:GetService("ReplicatedStorage").Scripts.Client.Manager.PlayerManager)
            pcall(function()
                for _, v in pairs(WeaponsInventory.localPlayerData.heros) do
                    if v.isEquip == true then
                        table.insert(getgenv().Settings.mespetsequiper, v.guid)
                    end
                end
            end)

            spawn(function()
                local function getNearestChest()
                    local nearest, dist = nil, getgenv().Settings.Range
                    local Players = game.Players
                    local localPlayer = Players.LocalPlayer
                    local localCharacter = localPlayer.Character
                    local humanoidRootPart = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart")
                    if not humanoidRootPart then return end

                    for _, enemy in pairs(Workspace.Enemys:GetChildren()) do
                        if enemy:FindFirstChild("HumanoidRootPart") and enemy.HumanoidRootPart:FindFirstChild("EnemyNameGui") and enemy.HumanoidRootPart.EnemyNameGui.HealthNum.Text ~= "0" then
                            local distance = (humanoidRootPart.Position - enemy.HumanoidRootPart.Position).magnitude
                            if distance < dist then
                                dist = distance
                                nearest = enemy
                            end
                        end
                    end
                    return nearest
                end

                while task.wait() do
                    if getgenv().Settings.AutoFarm then
                        local nearestEnemy = getNearestChest()

                        if nearestEnemy then
                            spawn(function()
                                if getgenv().Settings.WalkToEnemy then
                                    if nearestEnemy:FindFirstChild("HumanoidRootPart") then
                                        player.Character.Humanoid:MoveTo(nearestEnemy.HumanoidRootPart.Position)
                                    end
                                end
                            end)

                            spawn(function()
                                local args = { nearestEnemy:GetAttribute("EnemyGuid") }
                                game:GetService("ReplicatedStorage").Remotes.ClickEnemy:InvokeServer(unpack(args))
                                game:GetService("ReplicatedStorage").Remotes.PlayerClickAttack:FireServer(unpack(args))
                            end)

                            if getgenv().Settings.DamageBoost then
                                for c, d in pairs(getgenv().Settings.mespetsequiper) do
                                    local a = { [1] = { ["heroGuid"] = tostring(d), ["harmIndex"] = 1, ["isSkill"] = false, ["skillId"] = 200003 } }
                                    game:GetService("ReplicatedStorage").Remotes.HeroSkillHarm:FireServer(unpack(a))
                                end
                            end
                        end
                    end
                end
            end)
        end
    end,
})



ScriptsTab:AddButton({
    Name = "Anti-Afk(FIXED)",
    Callback = function()
        while wait() do
            game:GetService("Players").LocalPlayer.Idled:Connect(function()
                game:GetService("VirtualUser"):ClickButton2(Vector2.new())
            end)
        end
    end
})

    ScriptsTab:AddButton({
        Name = "Auto Fuse Swords",
        Callback = function()
            while wait() do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("FuseWeapon"):FireServer()
end
        end
    })

-- Adding a dropdown list to select players
local playerNames = {}
for _, player in pairs(game.Players:GetPlayers()) do
    table.insert(playerNames, player.Name)
end

PlayerTab:AddDropdown({
    Name = "Select Player",
    Options = playerNames,
    Callback = function(selectedPlayer)
        G.selectedPlayer = selectedPlayer
    end
})


-- Adding a button to trade the selected player
PlayerTab:AddButton({
    Name = "Trade Selected Player",
    Callback = function()
        if G.selectedPlayer then
            game:GetService("ReplicatedStorage").Remotes.SendTrade:InvokeServer(game:GetService("Players")[G.selectedPlayer])
        else
            warn("No player selected.")
        end
    end
})

-- Adding a button to refresh player list
PlayerTab:AddButton({
    Name = "Refresh Player List",
    Callback = function()
        playerNames = {}
        for _, player in pairs(game.Players:GetPlayers()) do
            table.insert(playerNames, player.Name)
        end
        PlayerTab:GetElement("Select Player"):UpdateOptions(playerNames)
    end
})

    PlayerTab:AddButton({
        Name = "Dupe",
        Callback = function()
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("DeleteMultipleHero"):Destroy()
    end
})

autoGainPower = false
autoGainPowerLoop = nil
fireDelay = 1 -- Delay in seconds

ScriptsTab:AddToggle({
    Name = "AutoGainPower",
    Default = false,
    Callback = function(Value)
        autoGainPower = Value
        print("Auto Gain Pwr is " .. tostring(autoGainPower))

        if autoGainPower then
            autoGainPowerLoop = game:GetService("RunService").Heartbeat:Connect(function()
                local remotes = game:GetService("ReplicatedStorage"):FindFirstChild("Remotes")
                if remotes and remotes:FindFirstChild("PlayerClickAttack") then
                    remotes.PlayerClickAttack:FireServer()
                end
                wait(fireDelay)
            end)
        else
            if autoGainPowerLoop then
                autoGainPowerLoop:Disconnect()
                autoGainPowerLoop = nil
            end
        end
    end
})

    ScriptsTab:AddButton({
        Name = "SimpleSpy",
        Callback = function()
            loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/78n/SimpleSpy/main/SimpleSpyBeta.lua"))()
        end
    })


    -- Creating the Auto-Dungeon tab
    local AutoDungeonTab = Window:MakeTab({
        Name = "Auto-Dungeon",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

        -- Creating the Player tab
    local FuseTab = Window:MakeTab({
        Name = "Auto-FuseGem",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })
 
    -- Function to get the first five gem IDs of a specified level
    local function GetFirstFiveGemIDs(level)
        local player = game.Players.LocalPlayer
 
        -- Get a reference to the ScrollingFrame inside the player's GUI
        local gui = player:WaitForChild("PlayerGui")
        local gemsPanel = gui:WaitForChild("GemsPanel")
        local frame = gemsPanel:WaitForChild("Frame")
        local bgImage = frame:WaitForChild("BgImage")
        local list = bgImage:WaitForChild("List")
        local scrollingFrame = list:WaitForChild("ScrollingFrame")
 
        -- Variables to store the first five gem IDs found
        local gem1, gem2, gem3, gem4, gem5
 
        -- Check if the ScrollingFrame exists
        if scrollingFrame then
            -- Counter for the number of gem IDs found
            local count = 0
 
            -- Iterate through each child of the ScrollingFrame
            for _, child in ipairs(scrollingFrame:GetChildren()) do
                -- Check if we already found 5 gem IDs
                if count >= 5 then
                    break
                end
 
                -- Find the "numtext" child inside the current child
                local numtext = child:FindFirstChild("NumText")
 
                -- Check if "numtext" exists and if its text matches the specified level
                if numtext and numtext.Text == "Lv." .. level then
                    -- Assign the child's name (assuming it's the ID) to gem variables
                    count = count + 1
                    if count == 1 then
                        gem1 = child.Name
                    elseif count == 2 then
                        gem2 = child.Name
                    elseif count == 3 then
                        gem3 = child.Name
                    elseif count == 4 then
                        gem4 = child.Name
                    elseif count == 5 then
                        gem5 = child.Name
                    end
                end
            end
 
            -- Check if any gem IDs were found
            if count > 0 then
                print("Gem IDs found:")
                print("gem1:", gem1)
                print("gem2:", gem2)
                print("gem3:", gem3)
                print("gem4:", gem4)
                print("gem5:", gem5)
            else
                print("No gem IDs found.")
            end
        else
            error("Error: ScrollingFrame not found.")
        end
 
        return gem1, gem2, gem3, gem4, gem5
    end
 
    -- Function to fuse the first five gems of a specified level
    local function FuseFirstFiveGems(level)
        while true do
            local gem1, gem2, gem3, gem4,gem5 = GetFirstFiveGemIDs(level)
 
            -- Check if at least five gem IDs were found
            if gem1 and gem2 and gem3 and gem4 and gem5 then
                -- Construct the args table
                local args = {
                    [1] = {
                        [1] = gem1,
                        [2] = gem2,
                        [3] = gem3,
                        [4] = gem4,
                        [5] = gem5 
                    }
                }
 
                print("Invoking FuseGem remote with args:", args)
 
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("FuseGem"):InvokeServer(unpack(args))
            else
                print("Error: Could not find five gem IDs.")
            end
 
            -- Wait for some time before fusing again (e.g., 5 seconds)
            wait(0.1)
        end
    end
 
    -- Adding AutoFuseGem toggle for each level
    for i = 1, 9 do
        FuseTab:AddToggle({
            Name = "Auto Fuse Lvl " .. i .. " Gems",
            Default = false,
            Callback = function(Value)
                G["AutoFuseGemsLevel" .. i] = Value
                if Value then
                    while G["AutoFuseGemsLevel" .. i] do
                        FuseFirstFiveGems(i)
                    end
                end
            end,
        })
    end

    -- Creating the Auto-Dungeon tab
    local AutoRaidTab = Window:MakeTab({
        Name = "Auto-Raid",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })


local KilluaOnlyTab = Window:MakeTab({
        Name = "KilluaOnly",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

local MercilessOnlyTab = Window:MakeTab({
        Name = "MercilessOnly",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

--- Function to handle equipment button press for damage team
local function onEquipDamageTeamButtonClick()
    local argsList = {
        { [1] = "cdadca97-9d15-42dc-b0ae-2b61ac9d2714" },
        { [1] = "c4ce448f-4b7b-4c11-8708-a27143c6f08e" },
        { [1] = "be0d6cae-b9c4-4580-b08b-84d8dd6c8762" },
        { [1] = "bb0d270f-2a85-40bc-9309-4798814f7d68" },
        { [1] = "bad28527-80b4-461d-9416-86abf66c47af" },
    }

    for _, args in ipairs(argsList) do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EquipHero"):FireServer(unpack(args))
    end
end

-- Add equipment button for damage team
MercilessOnlyTab:AddButton({
    Name = "Equip Damage Team",
    Callback = onEquipDamageTeamButtonClick
})

-- Function to handle equipment button press for damage team
local function onEquipDamageTeamButtonClick()
    local argsList = {
        { [1] = "b870ba6a-d3a7-4492-9844-42886c0a28c6" },
        { [1] = "cb5b5a34-2706-4ada-89a2-c834010678c8" },
        { [1] = "c9273e19-38a0-4fd5-b182-7c57af3a875c" },
        { [1] = "bee75e8c-970f-488a-b433-4e8b7f8d359a" },
        { [1] = "c08329cc-5e0f-435d-99b9-6ab547faab11" },
    }

    for _, args in ipairs(argsList) do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EquipHero"):FireServer(unpack(args))
    end
end

-- Add equipment button for damage team
MercilessOnlyTab:AddButton({
    Name = "Equip Drop Team",
    Callback = onEquipDamageTeamButtonClick

})


--- Function to handle equipment button press for damage team
local function onEquipDamageTeamButtonClick()
    local argsList = {
        { [1] = "dd7a139c-2a79-4bc5-9a91-5613778389ae" },
        { [1] = "dd2d731d-e1eb-4390-b18d-7e05ceee3838" },
        { [1] = "d8c89229-b50e-469e-ab1f-36961e012207" }
    }

    for _, args in ipairs(argsList) do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EquipHero"):FireServer(unpack(args))
    end
end

-- Add equipment button for damage team
KilluaOnlyTab:AddButton({
    Name = "Equip Damage Team",
    Callback = onEquipDamageTeamButtonClick
})

-- Function to handle equipment button press for damage team
local function onEquipDamageTeamButtonClick()
    local argsList = {
        { [1] = "1d56ee9d-b30e-4427-b3f7-774be8fa0b70" },
        { [1] = "2d645d94-a7df-4be4-9220-6762e49ad6c4" },
        { [1] = "404f57ed-9839-4aba-bd4e-7320f886e603" }
    }

    for _, args in ipairs(argsList) do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EquipHero"):FireServer(unpack(args))
    end
end

-- Add equipment button for damage team
KilluaOnlyTab:AddButton({
    Name = "Equip Drop Team",
    Callback = onEquipDamageTeamButtonClick


})

  -- Adding AutoBuyGem toggles
    AutoBuyTab:AddToggle({
        Name = "AutoBuy Lvl 3 Ruby",
        Default = false,
        Callback = function(Value)
            G.AutoBuyGems[10008] = Value
            if Value then
                while G.AutoBuyGems[10008] do
                    local args = {
                        [1] = 10008
                    }
 
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args))
                    wait(1) -- Adjust the delay as needed
                end
            end
        end,
    })
 
    AutoBuyTab:AddToggle({
        Name = "AutoBuy Lvl 3 Sapphire",
        Default = false,
        Callback = function(Value)
            G.AutoBuyGems[10009] = Value
            if Value then
                while G.AutoBuyGems[10009] do
                    local args = {
                        [1] = 10009
                    }
 
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args))
                    wait(1) -- Adjust the delay as needed
                end
            end
        end,
    })
 
    AutoBuyTab:AddToggle({
        Name = "AutoBuy Lvl 3 Emerald",
        Default = false,
        Callback = function(Value)
            G.AutoBuyGems[10010] = Value
            if Value then
                while G.AutoBuyGems[10010] do
                    local args = {
                        [1] = 10010
                    }
 
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args))
                    wait(1) -- Adjust the delay as needed
                end
            end
        end,
    })
 
    AutoBuyTab:AddToggle({
        Name = "AutoBuy Lvl 5 Ruby",
        Default = false,
        Callback = function(Value)
            G.AutoBuyGems[10011] = Value
            if Value then
                while G.AutoBuyGems[10011] do
                    local args = {
                        [1] = 10011
                    }
 
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args))
                    wait(1) -- Adjust the delay as needed
                end
            end
       end,
    })
 
    AutoBuyTab:AddToggle({
        Name = "AutoBuy Lvl 5 Sapphire",
        Default = false,
        Callback = function(Value)
            G.AutoBuyGems[10012] = Value
            if Value then
                while G.AutoBuyGems[10012] do
                    local args = {
                        [1] = 10012
                    }
 
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args))
                    wait(1) -- Adjust the delay as needed
                end
            end
        end,
    })
 
    AutoBuyTab:AddToggle({
        Name = "AutoBuy Lvl 5 Emerald",
        Default = false,
        Callback = function(Value)
            G.AutoBuyGems[10013] = Value
            if Value then
                while G.AutoBuyGems[10013] do
                    local args = {
                        [1] = 10013
                    }
 
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args))
                    wait(1) -- Adjust the delay as needed
                end
            end
        end,
    })
 
    AutoBuyTab:AddToggle({
        Name = "AutoBuy Lvl 7 Ruby",
        Default = false,
        Callback = function(Value)
            G.AutoBuyGems[10014] = Value
            if Value then
                while G.AutoBuyGems[10014] do
                    local args = {
                        [1] = 10014
                    }
 
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args))
                    wait(1) -- Adjust the delay as needed
                end
            end
        end,
    })
 
    AutoBuyTab:AddToggle({
        Name = "AutoBuy Lvl 7 Sapphire",
        Default = false,
        Callback = function(Value)
            G.AutoBuyGems[10015] = Value
            if Value then
                while G.AutoBuyGems[10015] do
                    local args = {
                        [1] = 10015
                    }
 
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args))
                    wait(1) -- Adjust the delay as needed
                end
            end
        end,
    })
 
    AutoBuyTab:AddToggle({
        Name = "AutoBuy Lvl 7 Emerald",
        Default = false,
        Callback = function(Value)
            G.AutoBuyGems[10016] = Value
            if Value then
                while G.AutoBuyGems[10016] do
                    local args = {
                        [1] = 10016
                    }
 
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args))
                    wait(1) -- Adjust the delay as needed
                end
            end
        end,
    })
end
